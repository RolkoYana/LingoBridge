spring.application.name=lingobridge-back

# Puerto dinámico para Railway, 8080 por defecto para desarrollo
server.port=${PORT:8080}

# Configuración PostgreSQL: Railway usará DATABASE_URL, desarrollo usará la configuración manual
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/lingobridge}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:yanasql}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.transaction.coordinator_class=jdbc
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=never


# Autenticacion con JWT
# el secreto con el que vamos a cifrar el token
jwt.secret=${JWT_SECRET:7y3W+Jk9GzAksH5Psmc1Q4dWZzX5O+9Pb0hL2zQxWKl8GyrqY7SxYF6G/J+Py4rT8SnSc+BgVh5MVz9L+YN3uB==}
# expiracion en segundos
jwt.expiration=${JWT_EXPIRATION:86400}

## Para documentos
# directorio donde se almacenan archivos subidos
file.upload-dir=${UPLOAD_DIR:uploads/}
# Sirve archivos desde la carpeta uploads ubicada en el root del proyecto
spring.web.resources.static-locations=classpath:/static/,file:${UPLOAD_DIR:uploads/}
# limites del tamaño de archivos
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
# para guardar o leer archivos grandes (LOBs) dentro de PostgreSQL
spring.datasource.hikari.auto-commit=false

# Optimización para memoria limitada
server.tomcat.max-threads=50
server.tomcat.min-spare-threads=5
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR

